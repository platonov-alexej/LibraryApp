@model LibraryApp.Models.AddBookView

@{
    ViewBag.Title = "Добавить книгу";
}


    <h2>Добавьте данные о книге:</h2>



@using (Html.BeginForm("addBook", "Catalog", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Название", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("model.Title", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Издательство", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("model.Publishing", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Publishing, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Дата издания", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("model.DateOfPublish", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateOfPublish, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Количество книг", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("model.AviableCount", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AviableCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Краткое содержание", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea name="model.Text" cols="30" rows="10" class="form-control"></textarea>
            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.ValidationSummary(true)
        @Html.Label("Изображение", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <fieldset>
                <div>
                    <div class="editor-label">Название</div>
                    <div class="editor-field">
                        @Html.Editor("model.PictureTitle", new { @class = "form-control" })
                        <div class="editor-label">Файл изображения</div>

                        @Html.Editor("model.uploadImage", new { htmlAttributes = new { @class = "form-control", type = "file" } })

                    </div>
                </div>
            </fieldset>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Автор", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("model.AuthorFullName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AuthorFullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Жанр", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("model.SubjectTitle", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SubjectTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Добавить книгу" class="btn btn-default" />
        </div>
    </div>
</div>

}

<div>
    @Html.ActionLink("Вернуться назад", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
